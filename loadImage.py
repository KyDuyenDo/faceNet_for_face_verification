import matplotlib.pyplot as plt
from tensorflow.keras.preprocessing.image import load_img
from tensorflow.keras import backend as K
K.set_image_data_format('channels_last')
import json
import numpy as np
import tensorflow as tf
from PIL import Image
import base64
import io
# from IPython import autoreload  # For auto-reloading (if needed)
import tensorflow.keras.models as keras_models
# Đường dẫn đến ảnh
image_path = "C:/Users/Admin/Desktop/facenet-face-verification-and-face-recognition-main/images/duyen.jpg"
image_base64 = ''
# Tải ảnh và chuyển đổi kích thước thành (160, 160)
imgdata = base64.b64decode(image_base64)
img = Image.open(io.BytesIO(imgdata)) 
    # Chuyển đổi hình ảnh sang định dạng JPEG trước khi sử dụng load_img
# img = img.convert('RGB')
img = tf.keras.preprocessing.image.img_to_array(img)
img = tf.image.resize(img, (160, 160))

print("trước: ", img)

img = np.around(img / 255.0, decimals=12)

print("sau: ", img)


# Hiển thị ảnh gốc và ảnh đã chuyển đổi
# plt.subplot(1, 2, 1)
# plt.imshow(img)
# plt.title("Ảnh gốc")

# plt.subplot(1, 2, 2)
# plt.imshow(img)
# plt.title("Ảnh đã chuyển đổi (160x160)")

plt.show()